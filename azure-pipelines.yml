trigger:
- main

pool:
  name: tfPortal-ms-aws-self-hosted
  demands:
    - Agent.Name -equals tfPortal-ms-dev

variables:
  EC2_HOST: '54.242.162.37'
  EC2_USER: 'ubuntu'
  PEM_FILE: 'aws-ec2-key.pem'

stages:
- stage: Deploy
  displayName: üöÄ Deploy Go App to EC2
  jobs:
  - job: DeployGoApp
    displayName: üì¶ DeployGoApp
    steps:

    - checkout: self

    - task: Bash@3
      displayName: 'üîê Decode & Write SSH Key'
      inputs:
        targetType: inline
        script: |
          echo "üîê Writing PEM to ~/.ssh"
          mkdir -p ~/.ssh
          echo "$PEM_BASE64" | base64 -d > ~/.ssh/${PEM_FILE}
          chmod 600 ~/.ssh/${PEM_FILE}
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/${PEM_FILE}
      env:
        PEM_BASE64: $(PEM_BASE64)

    - script: |
        echo "üì¶ Installing rsync if missing"
        which rsync || sudo apt-get update && sudo apt-get install -y rsync

        echo "üìÇ Syncing code to EC2 via rsync"
        rsync -avz -e "ssh -i ~/.ssh/${PEM_FILE} -o StrictHostKeyChecking=no" \
          --exclude '.git' \
          --exclude '*.log' \
          --exclude 'node_modules' \
          $(Build.SourcesDirectory)/ ${EC2_USER}@${EC2_HOST}:~/tfPortal-microservices-dev
      displayName: 'üì¶ Copy Files to EC2 (with rsync)'

    - script: |
        echo "üöÄ Starting Go App on EC2"
        ssh -i ~/.ssh/${PEM_FILE} -o StrictHostKeyChecking=no ${EC2_USER}@${EC2_HOST} <<EOF
        pkill -f main || true
        cd ~/tfPortal-microservices-dev
        nohup go run main.go > app.log 2>&1 &
        EOF
      displayName: '‚öôÔ∏è Run Go App on EC2'

